#!/usr/bin/env bash

if [ ! -z $EUID ];
then
  if [ "$EUID" -ne 0 ];
  then
    echo "Root permission required!";
    exit 1;
  fi
fi

declare currentKernel=$(uname -r)
declare -a activeKernels=($(ls -tr /boot/vmlinuz-* | head -n -2 | cut -d- -f2-))
declare -a activeKernelPackages=($(awk '{print "linux-image-" $0 " linux-headers-" $0}' <<< "${activeKernels[@]}"))
declare -a oldKernels=($(grep -v "${currentKernel}" <<< "${activeKernelPackages[@]}"))
declare -a waistKernelPackages=($(dpkg -l | grep -E '^rc' | grep -E 'linux-(headers|image)' | cut -d' ' -f2-3))

for kernel in "${activeKernels[@]}";
do
  declare -i hasHeaders=$(dpkg -l | grep -c "linux-headers-${kernel}");

  [ "${hasHeaders}" == 0 ] && {
    printf "Try installing kernel-headers for %s\n" "${kernel}";
    apt-get install -qy "linux-headers-${kernel}" || {
      echo "Failed to find/install linux-headers-${kernel}!";
      echo;
    }
  }
done

[[ "${#waistKernelPackages[@]}" > 0 ]] && {
  echo "Found waist kernel-packages:"
  echo "-----------------------------------"
  printf "%s\n" "${waistKernelPackages[@]}"
  echo "-----------------------------------"
  echo
  read -p "Are you sure? " -n 1 -r
  echo

  [[ $REPLY =~ ^[Yy]$ ]] && {
    apt-get -qy remove --purge ${waistKernelPackages[@]}
    apt-get -qy autoremove --purge
  }
}


[[ "${#oldKernels[@]}" == 0 ]] && {
  echo "All kernels clean. Nothing to do.";
  exit 0;
}

echo "-----------------------------------"
printf "%s\n" "${oldKernels[@]}"
echo "-----------------------------------"
echo
read -p "Are you sure? " -n 1 -r
echo

[[ $REPLY =~ ^[Yy]$ ]] && {
  apt-get -qy remove --purge ${oldKernels[@]}
  apt-get -qy autoremove --purge
}
