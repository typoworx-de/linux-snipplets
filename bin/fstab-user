#!/bin/bash

[ ${EUID} != 0 ] && {
  systemctl --user is-enabled fstab-user 2>&1 >/dev/null || {
    echo "Service is not enabled!";
    echo "Installation:";
    echo "ln -sf $(realpath ../../etc/systemd/user/fstab-user.service) /etc/systemd/user/fstab-user.service";
    echo "systemctl --user enable fstab-user.service";
    echo "systemctl --user start fstab-user.service";
    echo;

    exit 1;
  }

  sudo $0 "$@" || echo "Failed sudo'ing $0";
  exit 0;
}

[ -f /etc/fstab.user/fstab.${SUDO_UID} ] || {
  echo "No User-Mount units found for ${SUDO_USER} in /etc/fstab.user/fstab.${SUDO_UID}";
  exit 0;
}

sed 's|~|$HOME|g' < /etc/fstab.user/fstab.${SUDO_UID} | envsubst | sudo tee /var/run/tmpfiles.d/fstab-user.${SUDO_UID} > /dev/null;

for mountpoint in $(sed -r 's/[ \t]+/ /gm' < /var/run/tmpfiles.d/fstab-user.${SUDO_UID} | cut -d' ' -f2);
do
  [ -d "${mountpoint}" ] && continue;

  parentDir=$(dirname "${mountpoint}");

  [ -d "${parentDir}" ] || {
    echo "Skipping: ${parentDir} does not exist. Only creating max. 1-level missing";
    continue;
  }

  mkdir "${mountpoint}" || true;
done

mount -af /var/run/tmpfiles.d/fstab-user.${SUDO_UID} \
&& mount -aT /var/run/tmpfiles.d/fstab-user.${SUDO_UID};

exit $?
